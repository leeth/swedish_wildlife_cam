{
  "Comment": "Wildlife pipeline: budget-guarded manual workflow with weather enrichment",
  "StartAt": "GuardInputs",
  "States": {
    "GuardInputs": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "${GuardInputsLambdaArn}",
        "Payload.$": "$"
      },
      "Catch": [
        {
          "ErrorEquals": ["InvalidInput"],
          "ResultPath": "$.error",
          "Next": "FailInput"
        }
      ],
      "Next": "GuardBudget"
    },
    "FailInput": {
      "Type": "Fail",
      "Error": "InvalidInput",
      "Cause": "Input validation failed"
    },
    "GuardBudget": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "${GuardBudgetLambdaArn}",
        "Payload.$": "$"
      },
      "Catch": [
        {
          "ErrorEquals": ["BudgetExceeded"],
          "ResultPath": "$.error",
          "Next": "FailBudget"
        }
      ],
      "Next": "Stage0Exif"
    },
    "FailBudget": {
      "Type": "Fail",
      "Error": "BudgetExceeded",
      "Cause": "Estimated cost exceeds budget"
    },
    "Stage0Exif": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "${Stage0ExifLambdaArn}",
        "Payload.$": "$"
      },
      "Next": "SubmitBatchStage1"
    },
    "SubmitBatchStage1": {
      "Type": "Task",
      "Resource": "arn:aws:states:::batch:submitJob.sync",
      "Parameters": {
        "JobName.$": "States.Format('munin-detector-{}', $.session_id)",
        "JobQueue": "${BatchJobQueueArn}",
        "JobDefinition": "${BatchJobDefinitionArn}",
        "ContainerOverrides": {
          "Environment": [
            {
              "Name": "INPUT_URI",
              "Value.$": "$.stage0_output_uri"
            },
            {
              "Name": "OUTPUT_URI",
              "Value.$": "$.intermediate_uri"
            },
            {
              "Name": "SPECIES_CFG",
              "Value": "conf/species.yaml"
            }
          ],
          "Command": [
            "python",
            "-m",
            "munin.cli",
            "detect",
            "--input",
            "ENV:INPUT_URI",
            "--output",
            "ENV:OUTPUT_URI"
          ]
        },
        "RetryStrategy": {
          "Attempts": 2,
          "EvaluateOnExit": {
            "OnError": "RETRY",
            "OnExitCode": "RETRY"
          }
        },
        "Timeout": {
          "AttemptDurationSeconds.$": "$.max_job_duration"
        }
      },
      "Next": "Stage2Post"
    },
    "Stage2Post": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "${Stage2PostLambdaArn}",
        "Payload.$": "$"
      },
      "Next": "WeatherEnrichment"
    },
    "WeatherEnrichment": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "${WeatherEnrichmentLambdaArn}",
        "Payload.$": "$"
      },
      "Next": "WriteParquet"
    },
    "WriteParquet": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "${WriteParquetLambdaArn}",
        "Payload.$": "$"
      },
      "Next": "Success"
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}

